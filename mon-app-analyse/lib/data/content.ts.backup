// Types pour les périmètres
export type PerimetreType =
  | "Marché"
  | "Marché détaillé"
  | "Catégorie"
  | "Groupe Famille"
  | "Famille"
  | "Sous Famille"
  | "Produit"
  | "Fournisseur"
  | "Portefeuille";

export const perimetreOptions: PerimetreType[] = [
  "Marché",
  "Marché détaillé",
  "Catégorie",
  "Groupe Famille",
  "Famille",
  "Sous Famille",
  "Produit",
  "Fournisseur",
  "Portefeuille",
];

export const perimetreHierarchy: PerimetreType[] = [
  "Marché",
  "Marché détaillé",
  "Catégorie",
  "Groupe Famille",
  "Famille",
  "Sous Famille",
  "Produit",
  "Fournisseur",
  "Portefeuille",
];

// Interface pour les métriques avec valeur et évolution
export interface Metric {
  valeur: string;
  evolution: string;
}

export interface PerimetreItem {
  id: string;
  nom: string;
  tags: string[];
  ca: Metric;
  mpa: Metric;
  mpi: Metric;
  evoPa: Metric;
  coutTheorique: Metric;
  opportunite: Metric;
  // Relations hiérarchiques
  marche?: string;
  marcheDetaille?: string;
  categorie?: string;
  groupeFamille?: string;
  famille?: string;
  sousFamille?: string;
  fournisseur?: string;
  portefeuille?: string;
  pays?: string;
  // Link pour navigation
  link?: string;
}

// Helper function pour créer une métrique
const m = (valeur: string, evolution: string): Metric => ({ valeur, evolution });

// Helper pour générer des valeurs cohérentes
const genCA = (base: number, index: number): Metric => {
  const val = base + (index * base * 0.1);
  const evo = 2 + (Math.random() * 3);
  return m(`${Math.round(val).toLocaleString('fr-FR')}€`, `+${evo.toFixed(1)}%`);
};

const genMPA = (index: number): Metric => {
  const val = 67 + (Math.random() * 5);
  const evo = 1.5 + (Math.random() * 1);
  return m(`${val.toFixed(2)}%`, `+${evo.toFixed(2)}%`);
};

const genMPI = (index: number): Metric => {
  const val = 20 + (Math.random() * 4);
  const evo = -(Math.random() * 0.1);
  return m(`${val.toFixed(2)}%`, `${evo.toFixed(2)}%`);
};

const genEvoPa = (ca: number): Metric => {
  const val = ca * 0.025;
  const evo = 2 + (Math.random() * 1);
  return m(`${Math.round(val).toLocaleString('fr-FR')}€`, `+${evo.toFixed(1)}%`);
};

const genCout = (ca: number): Metric => {
  const val = ca * 0.315;
  const evo = 1 + (Math.random() * 0.5);
  return m(`${Math.round(val).toLocaleString('fr-FR')}€`, `+${evo.toFixed(2)}%`);
};

const genOpp = (ca: number): Metric => {
  const val = ca * 0.08;
  const evo = 4 + (Math.random() * 3);
  return m(`${Math.round(val).toLocaleString('fr-FR')}€`, `+${evo.toFixed(1)}%`);
};

// Helper pour générer des noms de produits cohérents par sous-famille
const productNamesBySousFamille: Record<string, string[]> = {
  // Produits de la mer
  "Anchois": ["Filets d'anchois à l'huile", "Anchois marinés", "Crème d'anchois", "Tapenade aux anchois"],
  "Blinis/croutons": ["Blinis nature", "Blinis sarrasin", "Croutons ail", "Croutons nature"],
  "Coquillages": ["Moules marinière", "Bulots cuits", "Coques", "Palourdes"],
  "Crevettes": ["Crevettes roses cuites", "Gambas", "Crevettes grises", "Cocktail de crevettes"],
  "Oeufs de poissons": ["Tarama rose", "Œufs de saumon", "Œufs de lump", "Tarama nature"],
  "Prépar.à tartiner/rillette": ["Rillettes de saumon", "Rillettes de thon", "Mousse de truite", "Rillettes de maquereau"],
  "Soupes/rouilles": ["Soupe de poisson", "Rouille provençale", "Bisque de homard", "Velouté de crustacés"],
  "Surimi": ["Bâtonnets de surimi", "Surimi saveur crabe", "Surimi à l'ancienne", "Surimi nature"],
  "Verrines/apéritifs": ["Verrine saumon", "Verrine crabe", "Tartelettes mer", "Bouchées apéritives"],
  "Autres poissons fumés": ["Truite fumée", "Maquereau fumé", "Flétan fumé", "Hareng fumé"],
  "Saumons fumés": ["Saumon fumé d'Ecosse", "Saumon fumé Norvège", "Saumon fumé bio", "Saumon fumé tradition"],

  // Charcuterie
  "Assortiments": ["Plateau charcuterie", "Assortiment apéritif", "Assiette terroir", "Mix charcuterie"],
  "Autre charcuterie cuite/crue/fumée": ["Bacon", "Lardons", "Jambon blanc", "Coppa"],
  "Jambons crus": ["Jambon de Bayonne", "Jambon Serrano", "Prosciutto", "Jambon de Parme"],
  "Saucisses (type Strasbourg, Francfort)": ["Saucisses Strasbourg", "Knacks", "Francfort", "Saucisses fumées"],
  "Saucissons cuits": ["Saucisson à l'ail", "Saucisson pistache", "Saucisson nature", "Cervelas"],
  "Foie gras": ["Foie gras canard", "Foie gras oie", "Bloc de foie gras", "Terrine de foie gras"],
  "Autres saucisses": ["Merguez", "Chipolatas", "Saucisses Toulouse", "Saucisses pur porc"],
  "Chorizo": ["Chorizo doux", "Chorizo fort", "Chorizo espagnol", "Chorizo tranches"],
  "Saucisses sèches": ["Saucisson sec", "Rosette", "Jesus", "Fuet"],
};

// Fonction pour générer des noms de produits cohérents
const getProductName = (sousFamilleNom: string, index: number): string => {
  const names = productNamesBySousFamille[sousFamilleNom];
  if (names && names[index % names.length]) {
    const baseName = names[index % names.length];
    const variant = Math.floor(index / names.length);
    return variant > 0 ? `${baseName} - V${variant + 1}` : baseName;
  }
  return `${sousFamilleNom} - Produit ${index + 1}`;
};

// Listes des valeurs pour les filtres
const pays = ["France", "Espagne", "Belgique", "Roumanie", "Pologne", "Italie"];
const fournisseurs = [
  "Labeyrie Fine Foods",
  "Picard Surgelés",
  "Lactalis Foodservice",
  "Fleury Michon",
  "Danone Professionnel",
  "Nestlé Professional",
  "Sysco France",
  "Transgourmet",
  "Metro Cash & Carry",
  "Brake France",
];
const portefeuilles = [
  "Premium Gourmet",
  "Tradition & Qualité",
  "Economique",
  "Bio & Responsable",
];

// Helper pour obtenir un élément aléatoire
const getRandomItem = <T,>(array: T[], index: number): T => {
  return array[index % array.length];
};

// Données des périmètres
export const perimetreData: Record<PerimetreType, PerimetreItem[]> = {
  Marché: [
    {
      id: "m1",
      nom: "PLS",
      tags: ["2 MD", "10 CAT", "14 GF", "42 FAM", "186 SF"],
      ca: m("12 500 000€", "+3.2%"),
      mpa: m("68.50%", "+1.85%"),
      mpi: m("22.30%", "-0.04%"),
      evoPa: m("400 000€", "+2.50%"),
      coutTheorique: m("3 937 500€", "+1.30%"),
      opportunite: m("1 250 000€", "+5.8%"),
    },
  ],

  "Marché détaillé": [
    {
      id: "md1",
      nom: "Carné Surgelés",
      tags: ["5 CAT", "8 GF", "20 FAM", "98 SF"],
      ca: m("6 250 000€", "+3.1%"),
      mpa: m("68.20%", "+1.80%"),
      mpi: m("22.50%", "-0.05%"),
      evoPa: m("193 750€", "+2.45%"),
      coutTheorique: m("1 968 750€", "+1.28%"),
      opportunite: m("625 000€", "+5.5%"),
      marche: "PLS",
    },
    {
      id: "md2",
      nom: "Laitier Traiteur",
      tags: ["5 CAT", "6 GF", "22 FAM", "88 SF"],
      ca: m("6 250 000€", "+3.3%"),
      mpa: m("68.80%", "+1.90%"),
      mpi: m("22.10%", "-0.03%"),
      evoPa: m("206 250€", "+2.55%"),
      coutTheorique: m("1 968 750€", "+1.32%"),
      opportunite: m("625 000€", "+6.1%"),
      marche: "PLS",
    },
  ],

  Catégorie: [
    { id: "cat1", nom: "SAURISSERIE", tags: ["3 GF", "7 FAM", "23 SF"], ca: genCA(1800000, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(1800000), coutTheorique: genCout(1800000), opportunite: genOpp(1800000), marche: "PLS", marcheDetaille: "Carné Surgelés" },
    { id: "cat2", nom: "SURGELE POISSON PLATS CUIS PDT", tags: ["1 GF", "5 FAM", "31 SF"], ca: genCA(1500000, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(1500000), coutTheorique: genCout(1500000), opportunite: genOpp(1500000), marche: "PLS", marcheDetaille: "Carné Surgelés" },
    { id: "cat3", nom: "SURGELE VIANDES LEGUMES", tags: ["1 GF", "2 FAM", "11 SF"], ca: genCA(1100000, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(1100000), coutTheorique: genCout(1100000), opportunite: genOpp(1100000), marche: "PLS", marcheDetaille: "Carné Surgelés" },
    { id: "cat4", nom: "SURGELES GLACE PPI", tags: ["2 GF", "6 FAM", "29 SF"], ca: genCA(1200000, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(1200000), coutTheorique: genCout(1200000), opportunite: genOpp(1200000), marche: "PLS", marcheDetaille: "Carné Surgelés" },
    { id: "cat5", nom: "VOLAILLE CHARCUTERIE", tags: ["1 GF", "1 FAM", "9 SF"], ca: genCA(650000, 4), mpa: genMPA(4), mpi: genMPI(4), evoPa: genEvoPa(650000), coutTheorique: genCout(650000), opportunite: genOpp(650000), marche: "PLS", marcheDetaille: "Carné Surgelés" },
    { id: "cat6", nom: "FROMAGE", tags: ["1 GF", "5 FAM", "12 SF"], ca: genCA(1875000, 5), mpa: genMPA(5), mpi: genMPI(5), evoPa: genEvoPa(1875000), coutTheorique: genCout(1875000), opportunite: genOpp(1875000), marche: "PLS", marcheDetaille: "Laitier Traiteur" },
    { id: "cat7", nom: "LAIT BEURRE CREME", tags: ["1 GF", "5 FAM", "14 SF"], ca: genCA(1562500, 6), mpa: genMPA(6), mpi: genMPI(6), evoPa: genEvoPa(1562500), coutTheorique: genCout(1562500), opportunite: genOpp(1562500), marche: "PLS", marcheDetaille: "Laitier Traiteur" },
    { id: "cat8", nom: "ŒUF PPI", tags: ["2 GF", "3 FAM", "11 SF"], ca: genCA(937500, 7), mpa: genMPA(7), mpi: genMPI(7), evoPa: genEvoPa(937500), coutTheorique: genCout(937500), opportunite: genOpp(937500), marche: "PLS", marcheDetaille: "Laitier Traiteur" },
    { id: "cat9", nom: "TRAITEUR  ", tags: ["1 GF", "2 FAM", "10 SF"], ca: genCA(1250000, 8), mpa: genMPA(8), mpi: genMPI(8), evoPa: genEvoPa(1250000), coutTheorique: genCout(1250000), opportunite: genOpp(1250000), marche: "PLS", marcheDetaille: "Laitier Traiteur" },
    { id: "cat10", nom: "ULTRA FRAIS", tags: ["2 GF", "9 FAM", "50 SF"], ca: genCA(625000, 9), mpa: genMPA(9), mpi: genMPI(9), evoPa: genEvoPa(625000), coutTheorique: genCout(625000), opportunite: genOpp(625000), marche: "PLS", marcheDetaille: "Laitier Traiteur" },
  ],

  "Groupe Famille": [
    { id: "gf1", nom: "Produits de la mer", tags: ["3 FAM", "11 SF"], ca: genCA(850000, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(850000), coutTheorique: genCout(850000), opportunite: genOpp(850000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE" },
    { id: "gf2", nom: "Charcuterie", tags: ["3 FAM", "12 SF"], ca: genCA(600000, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(600000), coutTheorique: genCout(600000), opportunite: genOpp(600000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE" },
    { id: "gf3", nom: "Traiteur", tags: ["1 FAM", "3 SF"], ca: genCA(350000, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(350000), coutTheorique: genCout(350000), opportunite: genOpp(350000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE" },
    { id: "gf4", nom: "Produits surgelés", tags: ["5 FAM", "31 SF"], ca: genCA(1500000, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(1500000), coutTheorique: genCout(1500000), opportunite: genOpp(1500000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT" },
    { id: "gf5", nom: "Produits surgelés", tags: ["2 FAM", "11 SF"], ca: genCA(1100000, 4), mpa: genMPA(4), mpi: genMPI(4), evoPa: genEvoPa(1100000), coutTheorique: genCout(1100000), opportunite: genOpp(1100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES" },
    { id: "gf6", nom: "Glaces/desserts surgelés", tags: ["4 FAM", "25 SF"], ca: genCA(750000, 5), mpa: genMPA(5), mpi: genMPI(5), evoPa: genEvoPa(750000), coutTheorique: genCout(750000), opportunite: genOpp(750000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI" },
    { id: "gf7", nom: "Produits surgelés", tags: ["1 FAM", "4 SF"], ca: genCA(450000, 6), mpa: genMPA(6), mpi: genMPI(6), evoPa: genEvoPa(450000), coutTheorique: genCout(450000), opportunite: genOpp(450000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI" },
    { id: "gf8", nom: "Viandes/volailles LS", tags: ["1 FAM", "9 SF"], ca: genCA(650000, 7), mpa: genMPA(7), mpi: genMPI(7), evoPa: genEvoPa(650000), coutTheorique: genCout(650000), opportunite: genOpp(650000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE" },
    { id: "gf9", nom: "Fromages", tags: ["5 FAM", "12 SF"], ca: genCA(1875000, 8), mpa: genMPA(8), mpi: genMPI(8), evoPa: genEvoPa(1875000), coutTheorique: genCout(1875000), opportunite: genOpp(1875000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE" },
    { id: "gf10", nom: "Cremerie", tags: ["5 FAM", "14 SF"], ca: genCA(1562500, 9), mpa: genMPA(9), mpi: genMPI(9), evoPa: genEvoPa(1562500), coutTheorique: genCout(1562500), opportunite: genOpp(1562500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME" },
    { id: "gf11", nom: "Pain/viennoiserie/patisserie", tags: ["3 FAM", "11 SF"], ca: genCA(562500, 10), mpa: genMPA(10), mpi: genMPI(10), evoPa: genEvoPa(562500), coutTheorique: genCout(562500), opportunite: genOpp(562500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI" },
    { id: "gf12", nom: "Cremerie", tags: ["1 FAM", "1 SF"], ca: genCA(375000, 11), mpa: genMPA(11), mpi: genMPI(11), evoPa: genEvoPa(375000), coutTheorique: genCout(375000), opportunite: genOpp(375000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI" },
    { id: "gf13", nom: "Traiteur", tags: ["2 FAM", "10 SF"], ca: genCA(1250000, 12), mpa: genMPA(12), mpi: genMPI(12), evoPa: genEvoPa(1250000), coutTheorique: genCout(1250000), opportunite: genOpp(1250000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  " },
    { id: "gf14", nom: "Ultra frais", tags: ["8 FAM", "45 SF"], ca: genCA(375000, 13), mpa: genMPA(13), mpi: genMPI(13), evoPa: genEvoPa(375000), coutTheorique: genCout(375000), opportunite: genOpp(375000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS" },
  ],

  Famille: [
    // SAURISSERIE - Produits de la mer
    { id: "fam1", nom: "Autres produits de la mer", tags: ["9 SF"], ca: genCA(350000, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(350000), coutTheorique: genCout(350000), opportunite: genOpp(350000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer" },
    { id: "fam2", nom: "Autres poissons fumés", tags: ["1 SF"], ca: genCA(250000, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer" },
    { id: "fam3", nom: "Saumons fumés", tags: ["1 SF"], ca: genCA(250000, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer" },
    // SAURISSERIE - Charcuterie
    { id: "fam4", nom: "Charcuterie cuite/crue/fumée", tags: ["5 SF"], ca: genCA(280000, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(280000), coutTheorique: genCout(280000), opportunite: genOpp(280000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie" },
    { id: "fam5", nom: "Patés/Rillettes/Foie Gras", tags: ["1 SF"], ca: genCA(160000, 4), mpa: genMPA(4), mpi: genMPI(4), evoPa: genEvoPa(160000), coutTheorique: genCout(160000), opportunite: genOpp(160000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie" },
    { id: "fam6", nom: "Saucisserie Sèche", tags: ["3 SF"], ca: genCA(160000, 5), mpa: genMPA(5), mpi: genMPI(5), evoPa: genEvoPa(160000), coutTheorique: genCout(160000), opportunite: genOpp(160000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie" },
    // SAURISSERIE - Traiteur
    { id: "fam7", nom: "Traiteur/plats cuisinés frais", tags: ["3 SF"], ca: genCA(350000, 6), mpa: genMPA(6), mpi: genMPI(6), evoPa: genEvoPa(350000), coutTheorique: genCout(350000), opportunite: genOpp(350000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Traiteur" },
    // SURGELE POISSON - Produits surgelés
    { id: "fam8", nom: "Plats cuisinés surgelés", tags: ["5 SF"], ca: genCA(300000, 7), mpa: genMPA(7), mpi: genMPI(7), evoPa: genEvoPa(300000), coutTheorique: genCout(300000), opportunite: genOpp(300000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés" },
    { id: "fam9", nom: "Poissons/produits de la mer surgelés", tags: ["9 SF"], ca: genCA(450000, 8), mpa: genMPA(8), mpi: genMPI(8), evoPa: genEvoPa(450000), coutTheorique: genCout(450000), opportunite: genOpp(450000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés" },
    { id: "fam10", nom: "Entrées surgelées", tags: ["4 SF"], ca: genCA(250000, 9), mpa: genMPA(9), mpi: genMPI(9), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés" },
    { id: "fam11", nom: "Pizzas surgelées", tags: ["3 SF"], ca: genCA(300000, 10), mpa: genMPA(10), mpi: genMPI(10), evoPa: genEvoPa(300000), coutTheorique: genCout(300000), opportunite: genOpp(300000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés" },
    { id: "fam12", nom: "Frites/pomme de terre transformées", tags: ["2 SF"], ca: genCA(200000, 11), mpa: genMPA(11), mpi: genMPI(11), evoPa: genEvoPa(200000), coutTheorique: genCout(200000), opportunite: genOpp(200000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés" },
    // SURGELE VIANDES - Produits surgelés
    { id: "fam13", nom: "Autres légume surgelé/soupe", tags: ["7 SF"], ca: genCA(600000, 12), mpa: genMPA(12), mpi: genMPI(12), evoPa: genEvoPa(600000), coutTheorique: genCout(600000), opportunite: genOpp(600000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés" },
    { id: "fam14", nom: "Viandes/volailles surgelés", tags: ["4 SF"], ca: genCA(500000, 13), mpa: genMPA(13), mpi: genMPI(13), evoPa: genEvoPa(500000), coutTheorique: genCout(500000), opportunite: genOpp(500000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés" },
    // SURGELES GLACE - Glaces/desserts surgelés
    { id: "fam15", nom: "Gâteaux/Pâtiss. Desserts surgelés", tags: ["4 SF"], ca: genCA(187500, 14), mpa: genMPA(14), mpi: genMPI(14), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés" },
    { id: "fam16", nom: "Pdt panificat.&Aide patisserie surgelés", tags: ["4 SF"], ca: genCA(187500, 15), mpa: genMPA(15), mpi: genMPI(15), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés" },
    { id: "fam17", nom: "Glace Snacking", tags: ["4 SF"], ca: genCA(187500, 16), mpa: genMPA(16), mpi: genMPI(16), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés" },
    { id: "fam18", nom: "Glaces Bacs > 100 ml", tags: ["2 SF"], ca: genCA(187500, 17), mpa: genMPA(17), mpi: genMPI(17), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés" },
    // SURGELES GLACE - Produits surgelés
    { id: "fam19", nom: "Fruits/jus fruits surgelés", tags: ["4 SF"], ca: genCA(450000, 18), mpa: genMPA(18), mpi: genMPI(18), evoPa: genEvoPa(450000), coutTheorique: genCout(450000), opportunite: genOpp(450000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Produits surgelés" },
    // VOLAILLE CHARCUTERIE
    { id: "fam20", nom: "Viande/volaille libre service", tags: ["9 SF"], ca: genCA(650000, 19), mpa: genMPA(19), mpi: genMPI(19), evoPa: genEvoPa(650000), coutTheorique: genCout(650000), opportunite: genOpp(650000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS" },
    // FROMAGE
    { id: "fam21", nom: "Fromages pâtes pressées", tags: ["5 SF"], ca: genCA(625000, 20), mpa: genMPA(20), mpi: genMPI(20), evoPa: genEvoPa(625000), coutTheorique: genCout(625000), opportunite: genOpp(625000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages" },
    { id: "fam22", nom: "Fromages persillés", tags: ["2 SF"], ca: genCA(375000, 21), mpa: genMPA(21), mpi: genMPI(21), evoPa: genEvoPa(375000), coutTheorique: genCout(375000), opportunite: genOpp(375000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages" },
    { id: "fam23", nom: "Chévre et Brebis", tags: ["1 SF"], ca: genCA(312500, 22), mpa: genMPA(22), mpi: genMPI(22), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages" },
    { id: "fam24", nom: "Feta / Mozzarella", tags: ["2 SF"], ca: genCA(312500, 23), mpa: genMPA(23), mpi: genMPI(23), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages" },
    { id: "fam25", nom: "Fromages frais à tartiner", tags: ["2 SF"], ca: genCA(250000, 24), mpa: genMPA(24), mpi: genMPI(24), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages" },
    // LAIT BEURRE CREME - Cremerie
    { id: "fam26", nom: "Beurres", tags: ["3 SF"], ca: genCA(312500, 25), mpa: genMPA(25), mpi: genMPI(25), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie" },
    { id: "fam27", nom: "Crèmes fraîches/sauces", tags: ["5 SF"], ca: genCA(312500, 26), mpa: genMPA(26), mpi: genMPI(26), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie" },
    { id: "fam28", nom: "Margarines/corps gras", tags: ["3 SF"], ca: genCA(312500, 27), mpa: genMPA(27), mpi: genMPI(27), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie" },
    { id: "fam29", nom: "Lait aromatisé", tags: ["1 SF"], ca: genCA(312500, 28), mpa: genMPA(28), mpi: genMPI(28), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie" },
    { id: "fam30", nom: "Lait", tags: ["2 SF"], ca: genCA(312500, 29), mpa: genMPA(29), mpi: genMPI(29), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie" },
    // ŒUF PPI - Pain
    { id: "fam31", nom: "Pains industriels", tags: ["7 SF"], ca: genCA(312500, 30), mpa: genMPA(30), mpi: genMPI(30), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie" },
    { id: "fam32", nom: "Viennoiseries", tags: ["3 SF"], ca: genCA(187500, 31), mpa: genMPA(31), mpi: genMPI(31), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie" },
    // ŒUF PPI - Cremerie
    { id: "fam33", nom: "Œufs", tags: ["1 SF"], ca: genCA(375000, 32), mpa: genMPA(32), mpi: genMPI(32), evoPa: genEvoPa(375000), coutTheorique: genCout(375000), opportunite: genOpp(375000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Cremerie" },
    // TRAITEUR - Traiteur
    { id: "fam34", nom: "Traiteur/plats cuisinés frais", tags: ["6 SF"], ca: genCA(750000, 33), mpa: genMPA(33), mpi: genMPI(33), evoPa: genEvoPa(750000), coutTheorique: genCout(750000), opportunite: genOpp(750000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur" },
    { id: "fam35", nom: "Pâtes fraiches/Quenelles", tags: ["4 SF"], ca: genCA(500000, 34), mpa: genMPA(34), mpi: genMPI(34), evoPa: genEvoPa(500000), coutTheorique: genCout(500000), opportunite: genOpp(500000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur" },
    // ULTRA FRAIS - Ultra frais
    { id: "fam36", nom: "Jus de fruits frais/légumes", tags: ["2 SF"], ca: genCA(46875, 35), mpa: genMPA(35), mpi: genMPI(35), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam37", nom: "Desserts", tags: ["8 SF"], ca: genCA(46875, 36), mpa: genMPA(36), mpi: genMPI(36), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam38", nom: "Fromage frais", tags: ["4 SF"], ca: genCA(46875, 37), mpa: genMPA(37), mpi: genMPI(37), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam39", nom: "Yaourts aromatisés/fruits", tags: ["5 SF"], ca: genCA(46875, 38), mpa: genMPA(38), mpi: genMPI(38), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam40", nom: "Compotes fraiches/desserts", tags: ["2 SF"], ca: genCA(46875, 39), mpa: genMPA(39), mpi: genMPI(39), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam41", nom: "Yaourts santé/biologique", tags: ["4 SF"], ca: genCA(46875, 40), mpa: genMPA(40), mpi: genMPI(40), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam42", nom: "Yaourts à boire/Snacking", tags: ["1 SF"], ca: genCA(46875, 41), mpa: genMPA(41), mpi: genMPI(41), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    { id: "fam43", nom: "Yaourts natures", tags: ["2 SF"], ca: genCA(46875, 42), mpa: genMPA(42), mpi: genMPI(42), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais" },
    // ULTRA FRAIS - Pain
    { id: "fam44", nom: "Patisseries industrielles", tags: ["5 SF"], ca: genCA(250000, 43), mpa: genMPA(43), mpi: genMPI(43), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie" },
  ],

  "Sous Famille": [
    // SAURISSERIE > Produits de la mer > Autres produits de la mer (9 SF)
    { id: "sf1", nom: "Anchois", tags: [], ca: genCA(38889, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf2", nom: "Blinis/croutons", tags: [], ca: genCA(38889, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf3", nom: "Coquillages", tags: [], ca: genCA(38889, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf4", nom: "Crevettes", tags: [], ca: genCA(38889, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf5", nom: "Oeufs de poissons", tags: [], ca: genCA(38889, 4), mpa: genMPA(4), mpi: genMPI(4), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf6", nom: "Prépar.à tartiner/rillette", tags: [], ca: genCA(38889, 5), mpa: genMPA(5), mpi: genMPI(5), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf7", nom: "Soupes/rouilles", tags: [], ca: genCA(38889, 6), mpa: genMPA(6), mpi: genMPI(6), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf8", nom: "Surimi", tags: [], ca: genCA(38889, 7), mpa: genMPA(7), mpi: genMPI(7), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },
    { id: "sf9", nom: "Verrines/apéritifs", tags: [], ca: genCA(38889, 8), mpa: genMPA(8), mpi: genMPI(8), evoPa: genEvoPa(38889), coutTheorique: genCout(38889), opportunite: genOpp(38889), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres produits de la mer" },

    // SAURISSERIE > Produits de la mer > Autres poissons fumés (1 SF)
    { id: "sf10", nom: "Autres poissons fumés", tags: [], ca: genCA(250000, 9), mpa: genMPA(9), mpi: genMPI(9), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Autres poissons fumés" },

    // SAURISSERIE > Produits de la mer > Saumons fumés (1 SF)
    { id: "sf11", nom: "Saumons fumés", tags: [], ca: genCA(250000, 10), mpa: genMPA(10), mpi: genMPI(10), evoPa: genEvoPa(250000), coutTheorique: genCout(250000), opportunite: genOpp(250000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Produits de la mer", famille: "Saumons fumés" },

    // SAURISSERIE > Charcuterie > Charcuterie cuite/crue/fumée (5 SF)
    { id: "sf12", nom: "Assortiments", tags: [], ca: genCA(56000, 11), mpa: genMPA(11), mpi: genMPI(11), evoPa: genEvoPa(56000), coutTheorique: genCout(56000), opportunite: genOpp(56000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Charcuterie cuite/crue/fumée" },
    { id: "sf13", nom: "Autre charcuterie cuite/crue/fumée", tags: [], ca: genCA(56000, 12), mpa: genMPA(12), mpi: genMPI(12), evoPa: genEvoPa(56000), coutTheorique: genCout(56000), opportunite: genOpp(56000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Charcuterie cuite/crue/fumée" },
    { id: "sf14", nom: "Jambons crus", tags: [], ca: genCA(56000, 13), mpa: genMPA(13), mpi: genMPI(13), evoPa: genEvoPa(56000), coutTheorique: genCout(56000), opportunite: genOpp(56000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Charcuterie cuite/crue/fumée" },
    { id: "sf15", nom: "Saucisses (type Strasbourg, Francfort)", tags: [], ca: genCA(56000, 14), mpa: genMPA(14), mpi: genMPI(14), evoPa: genEvoPa(56000), coutTheorique: genCout(56000), opportunite: genOpp(56000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Charcuterie cuite/crue/fumée" },
    { id: "sf16", nom: "Saucissons cuits", tags: [], ca: genCA(56000, 15), mpa: genMPA(15), mpi: genMPI(15), evoPa: genEvoPa(56000), coutTheorique: genCout(56000), opportunite: genOpp(56000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Charcuterie cuite/crue/fumée" },

    // SAURISSERIE > Charcuterie > Patés/Rillettes/Foie Gras (1 SF)
    { id: "sf17", nom: "Foie gras", tags: [], ca: genCA(160000, 16), mpa: genMPA(16), mpi: genMPI(16), evoPa: genEvoPa(160000), coutTheorique: genCout(160000), opportunite: genOpp(160000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Patés/Rillettes/Foie Gras" },

    // SAURISSERIE > Charcuterie > Saucisserie Sèche (3 SF)
    { id: "sf18", nom: "Autres saucisses", tags: [], ca: genCA(53333, 17), mpa: genMPA(17), mpi: genMPI(17), evoPa: genEvoPa(53333), coutTheorique: genCout(53333), opportunite: genOpp(53333), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Saucisserie Sèche" },
    { id: "sf19", nom: "Chorizo", tags: [], ca: genCA(53333, 18), mpa: genMPA(18), mpi: genMPI(18), evoPa: genEvoPa(53333), coutTheorique: genCout(53333), opportunite: genOpp(53333), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Saucisserie Sèche" },
    { id: "sf20", nom: "Saucisses sèches", tags: [], ca: genCA(53333, 19), mpa: genMPA(19), mpi: genMPI(19), evoPa: genEvoPa(53333), coutTheorique: genCout(53333), opportunite: genOpp(53333), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Charcuterie", famille: "Saucisserie Sèche" },

    // SAURISSERIE > Traiteur > Traiteur/plats cuisinés frais (3 SF)
    { id: "sf21", nom: "Autres Plats cuisinés frais", tags: [], ca: genCA(116667, 20), mpa: genMPA(20), mpi: genMPI(20), evoPa: genEvoPa(116667), coutTheorique: genCout(116667), opportunite: genOpp(116667), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf22", nom: "Plats cuisinés (type plats chauds)", tags: [], ca: genCA(116667, 21), mpa: genMPA(21), mpi: genMPI(21), evoPa: genEvoPa(116667), coutTheorique: genCout(116667), opportunite: genOpp(116667), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf23", nom: "Salades", tags: [], ca: genCA(116667, 22), mpa: genMPA(22), mpi: genMPI(22), evoPa: genEvoPa(116667), coutTheorique: genCout(116667), opportunite: genOpp(116667), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SAURISSERIE", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },

    // SURGELE POISSON PLATS CUIS PDT > Produits surgelés > Plats cuisinés surgelés (5 SF)
    { id: "sf24", nom: "Autres plats cuisines", tags: [], ca: genCA(60000, 23), mpa: genMPA(23), mpi: genMPI(23), evoPa: genEvoPa(60000), coutTheorique: genCout(60000), opportunite: genOpp(60000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Plats cuisinés surgelés" },
    { id: "sf25", nom: "Plat cuisiné a base de viande", tags: [], ca: genCA(60000, 24), mpa: genMPA(24), mpi: genMPI(24), evoPa: genEvoPa(60000), coutTheorique: genCout(60000), opportunite: genOpp(60000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Plats cuisinés surgelés" },
    { id: "sf26", nom: "Plat cuisiné poisson/fruit m", tags: [], ca: genCA(60000, 25), mpa: genMPA(25), mpi: genMPI(25), evoPa: genEvoPa(60000), coutTheorique: genCout(60000), opportunite: genOpp(60000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Plats cuisinés surgelés" },
    { id: "sf27", nom: "Plats cuisines a base de pates", tags: [], ca: genCA(60000, 26), mpa: genMPA(26), mpi: genMPI(26), evoPa: genEvoPa(60000), coutTheorique: genCout(60000), opportunite: genOpp(60000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Plats cuisinés surgelés" },
    { id: "sf28", nom: "Plats cuisines specialites", tags: [], ca: genCA(60000, 27), mpa: genMPA(27), mpi: genMPI(27), evoPa: genEvoPa(60000), coutTheorique: genCout(60000), opportunite: genOpp(60000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Plats cuisinés surgelés" },

    // SURGELE POISSON PLATS CUIS PDT > Produits surgelés > Poissons/produits de la mer surgelés (9 SF)
    { id: "sf29", nom: "Autres Poissons/fruits de mer", tags: [], ca: genCA(50000, 28), mpa: genMPA(28), mpi: genMPI(28), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf30", nom: "Autres preparations base poisson surgelés", tags: [], ca: genCA(50000, 29), mpa: genMPA(29), mpi: genMPI(29), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf31", nom: "Calamar/encornet/poulpe/seches", tags: [], ca: genCA(50000, 30), mpa: genMPA(30), mpi: genMPI(30), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf32", nom: "Crevettes/gambas/Langoustes/homards/crabes", tags: [], ca: genCA(50000, 31), mpa: genMPA(31), mpi: genMPI(31), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf33", nom: "Escargots/cuisses de grenouil", tags: [], ca: genCA(50000, 32), mpa: genMPA(32), mpi: genMPI(32), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf34", nom: "Noix st jacques/petoncle/coqui", tags: [], ca: genCA(50000, 33), mpa: genMPA(33), mpi: genMPI(33), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf35", nom: "Poisson nature", tags: [], ca: genCA(50000, 34), mpa: genMPA(34), mpi: genMPI(34), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf36", nom: "Poissons surgelés /preparations panee", tags: [], ca: genCA(50000, 35), mpa: genMPA(35), mpi: genMPI(35), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },
    { id: "sf37", nom: "Surimi surgelé", tags: [], ca: genCA(50000, 36), mpa: genMPA(36), mpi: genMPI(36), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Poissons/produits de la mer surgelés" },

    // SURGELE POISSON PLATS CUIS PDT > Produits surgelés > Entrées surgelées (4 SF)
    { id: "sf38", nom: "Autres produits", tags: [], ca: genCA(62500, 37), mpa: genMPA(37), mpi: genMPI(37), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Entrées surgelées" },
    { id: "sf39", nom: "Crêpes/galettes salées", tags: [], ca: genCA(62500, 38), mpa: genMPA(38), mpi: genMPI(38), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Entrées surgelées" },
    { id: "sf40", nom: "Patisseries salees", tags: [], ca: genCA(62500, 39), mpa: genMPA(39), mpi: genMPI(39), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Entrées surgelées" },
    { id: "sf41", nom: "Quiches/tartes/tourtes", tags: [], ca: genCA(62500, 40), mpa: genMPA(40), mpi: genMPI(40), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Entrées surgelées" },

    // SURGELE POISSON PLATS CUIS PDT > Produits surgelés > Pizzas surgelées (3 SF)
    { id: "sf42", nom: "Cuite sur pierre", tags: [], ca: genCA(100000, 41), mpa: genMPA(41), mpi: genMPI(41), evoPa: genEvoPa(100000), coutTheorique: genCout(100000), opportunite: genOpp(100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Pizzas surgelées" },
    { id: "sf43", nom: "Feu de bois", tags: [], ca: genCA(100000, 42), mpa: genMPA(42), mpi: genMPI(42), evoPa: genEvoPa(100000), coutTheorique: genCout(100000), opportunite: genOpp(100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Pizzas surgelées" },
    { id: "sf44", nom: "Standard", tags: [], ca: genCA(100000, 43), mpa: genMPA(43), mpi: genMPI(43), evoPa: genEvoPa(100000), coutTheorique: genCout(100000), opportunite: genOpp(100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Pizzas surgelées" },

    // SURGELE POISSON PLATS CUIS PDT > Produits surgelés > Frites/pomme de terre transformées (2 SF)
    { id: "sf45", nom: "Frites", tags: [], ca: genCA(100000, 44), mpa: genMPA(44), mpi: genMPI(44), evoPa: genEvoPa(100000), coutTheorique: genCout(100000), opportunite: genOpp(100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Frites/pomme de terre transformées" },
    { id: "sf46", nom: "Préparation pommes de terre", tags: [], ca: genCA(100000, 45), mpa: genMPA(45), mpi: genMPI(45), evoPa: genEvoPa(100000), coutTheorique: genCout(100000), opportunite: genOpp(100000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE POISSON PLATS CUIS PDT", groupeFamille: "Produits surgelés", famille: "Frites/pomme de terre transformées" },

    // SURGELE VIANDES LEGUMES > Produits surgelés > Autres légume surgelé/soupe (7 SF)
    { id: "sf47", nom: "Autres legumes", tags: [], ca: genCA(85714, 46), mpa: genMPA(46), mpi: genMPI(46), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf48", nom: "Champignons", tags: [], ca: genCA(85714, 47), mpa: genMPA(47), mpi: genMPI(47), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf49", nom: "Herbes/assaisonnements", tags: [], ca: genCA(85714, 48), mpa: genMPA(48), mpi: genMPI(48), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf50", nom: "Légumes cuisines/Purées/Gratins", tags: [], ca: genCA(85714, 49), mpa: genMPA(49), mpi: genMPI(49), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf51", nom: "Légumes verts", tags: [], ca: genCA(85714, 50), mpa: genMPA(50), mpi: genMPI(50), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf52", nom: "Mélanges de legumes/garniture", tags: [], ca: genCA(85714, 51), mpa: genMPA(51), mpi: genMPI(51), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },
    { id: "sf53", nom: "Soupes", tags: [], ca: genCA(85714, 52), mpa: genMPA(52), mpi: genMPI(52), evoPa: genEvoPa(85714), coutTheorique: genCout(85714), opportunite: genOpp(85714), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Autres légume surgelé/soupe" },

    // SURGELE VIANDES LEGUMES > Produits surgelés > Viandes/volailles surgelés (4 SF)
    { id: "sf54", nom: "Bœuf haché/Préparation/Découpe", tags: [], ca: genCA(125000, 53), mpa: genMPA(53), mpi: genMPI(53), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Viandes/volailles surgelés" },
    { id: "sf55", nom: "Nuggets", tags: [], ca: genCA(125000, 54), mpa: genMPA(54), mpi: genMPI(54), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Viandes/volailles surgelés" },
    { id: "sf56", nom: "Porc/decoupes/preparations", tags: [], ca: genCA(125000, 55), mpa: genMPA(55), mpi: genMPI(55), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Viandes/volailles surgelés" },
    { id: "sf57", nom: "Volailles Découpes/Préparations", tags: [], ca: genCA(125000, 56), mpa: genMPA(56), mpi: genMPI(56), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELE VIANDES LEGUMES", groupeFamille: "Produits surgelés", famille: "Viandes/volailles surgelés" },

    // SURGELES GLACE PPI > Glaces/desserts surgelés > Gâteaux/Pâtiss. Desserts surgelés (4 SF)
    { id: "sf58", nom: "Autres desserts glacés", tags: [], ca: genCA(46875, 57), mpa: genMPA(57), mpi: genMPI(57), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Gâteaux/Pâtiss. Desserts surgelés" },
    { id: "sf59", nom: "Gateaux glacés à partager", tags: [], ca: genCA(46875, 58), mpa: genMPA(58), mpi: genMPI(58), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Gâteaux/Pâtiss. Desserts surgelés" },
    { id: "sf60", nom: "Patisseries/tartes surgelee", tags: [], ca: genCA(46875, 59), mpa: genMPA(59), mpi: genMPI(59), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Gâteaux/Pâtiss. Desserts surgelés" },
    { id: "sf61", nom: "Spécialités festives (Bûches - Bûchettes...)", tags: [], ca: genCA(46875, 60), mpa: genMPA(60), mpi: genMPI(60), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Gâteaux/Pâtiss. Desserts surgelés" },

    // SURGELES GLACE PPI > Glaces/desserts surgelés > Pdt panificat.&Aide patisserie surgelés (4 SF)
    { id: "sf62", nom: "Autres produit de panification", tags: [], ca: genCA(46875, 61), mpa: genMPA(61), mpi: genMPI(61), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Pdt panificat.&Aide patisserie surgelés" },
    { id: "sf63", nom: "Brioche/bun/special.individ.", tags: [], ca: genCA(46875, 62), mpa: genMPA(62), mpi: genMPI(62), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Pdt panificat.&Aide patisserie surgelés" },
    { id: "sf64", nom: "Pains", tags: [], ca: genCA(46875, 63), mpa: genMPA(63), mpi: genMPI(63), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Pdt panificat.&Aide patisserie surgelés" },
    { id: "sf65", nom: "Pate crue bloc feuillete roulé", tags: [], ca: genCA(46875, 64), mpa: genMPA(64), mpi: genMPI(64), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Pdt panificat.&Aide patisserie surgelés" },

    // SURGELES GLACE PPI > Glaces/desserts surgelés > Glace Snacking (4 SF)
    { id: "sf66", nom: "Autres produits snacking glacés", tags: [], ca: genCA(46875, 65), mpa: genMPA(65), mpi: genMPI(65), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glace Snacking" },
    { id: "sf67", nom: "Batonnets", tags: [], ca: genCA(46875, 66), mpa: genMPA(66), mpi: genMPI(66), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glace Snacking" },
    { id: "sf68", nom: "Cones/cornets", tags: [], ca: genCA(46875, 67), mpa: genMPA(67), mpi: genMPI(67), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glace Snacking" },
    { id: "sf69", nom: "Pots/coupelles <100ml", tags: [], ca: genCA(46875, 68), mpa: genMPA(68), mpi: genMPI(68), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glace Snacking" },

    // SURGELES GLACE PPI > Glaces/desserts surgelés > Glaces Bacs > 100 ml (2 SF)
    { id: "sf70", nom: "Bacs Crèmes Glacées", tags: [], ca: genCA(93750, 69), mpa: genMPA(69), mpi: genMPI(69), evoPa: genEvoPa(93750), coutTheorique: genCout(93750), opportunite: genOpp(93750), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glaces Bacs > 100 ml" },
    { id: "sf71", nom: "Bacs Sorbets", tags: [], ca: genCA(93750, 70), mpa: genMPA(70), mpi: genMPI(70), evoPa: genEvoPa(93750), coutTheorique: genCout(93750), opportunite: genOpp(93750), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Glaces/desserts surgelés", famille: "Glaces Bacs > 100 ml" },

    // SURGELES GLACE PPI > Produits surgelés > Fruits/jus fruits surgelés (4 SF)
    { id: "sf72", nom: "Autres préparations de fruits", tags: [], ca: genCA(112500, 71), mpa: genMPA(71), mpi: genMPI(71), evoPa: genEvoPa(112500), coutTheorique: genCout(112500), opportunite: genOpp(112500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Produits surgelés", famille: "Fruits/jus fruits surgelés" },
    { id: "sf73", nom: "Baies/fruits entiers", tags: [], ca: genCA(112500, 72), mpa: genMPA(72), mpi: genMPI(72), evoPa: genEvoPa(112500), coutTheorique: genCout(112500), opportunite: genOpp(112500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Produits surgelés", famille: "Fruits/jus fruits surgelés" },
    { id: "sf74", nom: "Cocktails de fruits", tags: [], ca: genCA(112500, 73), mpa: genMPA(73), mpi: genMPI(73), evoPa: genEvoPa(112500), coutTheorique: genCout(112500), opportunite: genOpp(112500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Produits surgelés", famille: "Fruits/jus fruits surgelés" },
    { id: "sf75", nom: "Jus/pulpes/coulis de fruit", tags: [], ca: genCA(112500, 74), mpa: genMPA(74), mpi: genMPI(74), evoPa: genEvoPa(112500), coutTheorique: genCout(112500), opportunite: genOpp(112500), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "SURGELES GLACE PPI", groupeFamille: "Produits surgelés", famille: "Fruits/jus fruits surgelés" },

    // VOLAILLE CHARCUTERIE > Viandes/volailles LS > Viande/volaille libre service (9 SF)
    { id: "sf76", nom: "Autres volailles", tags: [], ca: genCA(72222, 75), mpa: genMPA(75), mpi: genMPI(75), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf77", nom: "Blanc de poulet", tags: [], ca: genCA(72222, 76), mpa: genMPA(76), mpi: genMPI(76), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf78", nom: "Blancs de dinde", tags: [], ca: genCA(72222, 77), mpa: genMPA(77), mpi: genMPI(77), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf79", nom: "Brochettes", tags: [], ca: genCA(72222, 78), mpa: genMPA(78), mpi: genMPI(78), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf80", nom: "Cuisses de poulet", tags: [], ca: genCA(72222, 79), mpa: genMPA(79), mpi: genMPI(79), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf81", nom: "Pilons de poulet", tags: [], ca: genCA(72222, 80), mpa: genMPA(80), mpi: genMPI(80), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf82", nom: "Poularde/Poule/Coq", tags: [], ca: genCA(72222, 81), mpa: genMPA(81), mpi: genMPI(81), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf83", nom: "Poulet entier", tags: [], ca: genCA(72222, 82), mpa: genMPA(82), mpi: genMPI(82), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },
    { id: "sf84", nom: "Volailles festives", tags: [], ca: genCA(72222, 83), mpa: genMPA(83), mpi: genMPI(83), evoPa: genEvoPa(72222), coutTheorique: genCout(72222), opportunite: genOpp(72222), marche: "PLS", marcheDetaille: "Carné Surgelés", categorie: "VOLAILLE CHARCUTERIE", groupeFamille: "Viandes/volailles LS", famille: "Viande/volaille libre service" },

    // FROMAGE > Fromages > Fromages pâtes pressées (5 SF)
    { id: "sf85", nom: "Emmental", tags: [], ca: genCA(125000, 84), mpa: genMPA(84), mpi: genMPI(84), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages pâtes pressées" },
    { id: "sf86", nom: "Fromage italien", tags: [], ca: genCA(125000, 85), mpa: genMPA(85), mpi: genMPI(85), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages pâtes pressées" },
    { id: "sf87", nom: "Fromage pour fondue", tags: [], ca: genCA(125000, 86), mpa: genMPA(86), mpi: genMPI(86), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages pâtes pressées" },
    { id: "sf88", nom: "Pates pressées non cuites", tags: [], ca: genCA(125000, 87), mpa: genMPA(87), mpi: genMPI(87), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages pâtes pressées" },
    { id: "sf89", nom: "Raclette", tags: [], ca: genCA(125000, 88), mpa: genMPA(88), mpi: genMPI(88), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages pâtes pressées" },

    // FROMAGE > Fromages > Fromages persillés (2 SF)
    { id: "sf90", nom: "Fromages Bleus", tags: [], ca: genCA(187500, 89), mpa: genMPA(89), mpi: genMPI(89), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages persillés" },
    { id: "sf91", nom: "Roquefort", tags: [], ca: genCA(187500, 90), mpa: genMPA(90), mpi: genMPI(90), evoPa: genEvoPa(187500), coutTheorique: genCout(187500), opportunite: genOpp(187500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages persillés" },

    // FROMAGE > Fromages > Chévre et Brebis (1 SF)
    { id: "sf92", nom: "Fromages de chevre", tags: [], ca: genCA(312500, 91), mpa: genMPA(91), mpi: genMPI(91), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Chévre et Brebis" },

    // FROMAGE > Fromages > Feta / Mozzarella (2 SF)
    { id: "sf93", nom: "Fromages frais - Féta", tags: [], ca: genCA(156250, 92), mpa: genMPA(92), mpi: genMPI(92), evoPa: genEvoPa(156250), coutTheorique: genCout(156250), opportunite: genOpp(156250), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Feta / Mozzarella" },
    { id: "sf94", nom: "Fromages frais - Spécialité italienne", tags: [], ca: genCA(156250, 93), mpa: genMPA(93), mpi: genMPI(93), evoPa: genEvoPa(156250), coutTheorique: genCout(156250), opportunite: genOpp(156250), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Feta / Mozzarella" },

    // FROMAGE > Fromages > Fromages frais à tartiner (2 SF)
    { id: "sf95", nom: "Fromages frais aromatises", tags: [], ca: genCA(125000, 94), mpa: genMPA(94), mpi: genMPI(94), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages frais à tartiner" },
    { id: "sf96", nom: "Fromages frais type nature", tags: [], ca: genCA(125000, 95), mpa: genMPA(95), mpi: genMPI(95), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "FROMAGE", groupeFamille: "Fromages", famille: "Fromages frais à tartiner" },

    // LAIT BEURRE CREME > Cremerie > Beurres (3 SF)
    { id: "sf97", nom: "allégés sans sel", tags: [], ca: genCA(104167, 96), mpa: genMPA(96), mpi: genMPI(96), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Beurres" },
    { id: "sf98", nom: "Salés", tags: [], ca: genCA(104167, 97), mpa: genMPA(97), mpi: genMPI(97), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Beurres" },
    { id: "sf99", nom: "Sans sel", tags: [], ca: genCA(104167, 98), mpa: genMPA(98), mpi: genMPI(98), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Beurres" },

    // LAIT BEURRE CREME > Cremerie > Crèmes fraîches/sauces (5 SF)
    { id: "sf100", nom: "Autres crèmes", tags: [], ca: genCA(62500, 99), mpa: genMPA(99), mpi: genMPI(99), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Crèmes fraîches/sauces" },
    { id: "sf101", nom: "Cremes fouettes aerosols", tags: [], ca: genCA(62500, 100), mpa: genMPA(100), mpi: genMPI(100), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Crèmes fraîches/sauces" },
    { id: "sf102", nom: "Cremes fraiches epaisses", tags: [], ca: genCA(62500, 101), mpa: genMPA(101), mpi: genMPI(101), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Crèmes fraîches/sauces" },
    { id: "sf103", nom: "Cremes longue conservation", tags: [], ca: genCA(62500, 102), mpa: genMPA(102), mpi: genMPI(102), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Crèmes fraîches/sauces" },
    { id: "sf104", nom: "Crèmes sucrées", tags: [], ca: genCA(62500, 103), mpa: genMPA(103), mpi: genMPI(103), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Crèmes fraîches/sauces" },

    // LAIT BEURRE CREME > Cremerie > Margarines/corps gras (3 SF)
    { id: "sf105", nom: "Corps gras a tartiner", tags: [], ca: genCA(104167, 104), mpa: genMPA(104), mpi: genMPI(104), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Margarines/corps gras" },
    { id: "sf106", nom: "Corps gras cuisine et tartinable", tags: [], ca: genCA(104167, 105), mpa: genMPA(105), mpi: genMPI(105), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Margarines/corps gras" },
    { id: "sf107", nom: "Corps gras de cuisine", tags: [], ca: genCA(104167, 106), mpa: genMPA(106), mpi: genMPI(106), evoPa: genEvoPa(104167), coutTheorique: genCout(104167), opportunite: genOpp(104167), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Margarines/corps gras" },

    // LAIT BEURRE CREME > Cremerie > Lait aromatisé (1 SF)
    { id: "sf108", nom: "Lait longue conservat.aromat", tags: [], ca: genCA(312500, 107), mpa: genMPA(107), mpi: genMPI(107), evoPa: genEvoPa(312500), coutTheorique: genCout(312500), opportunite: genOpp(312500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Lait aromatisé" },

    // LAIT BEURRE CREME > Cremerie > Lait (2 SF)
    { id: "sf109", nom: "Lait longue conservation natur", tags: [], ca: genCA(156250, 108), mpa: genMPA(108), mpi: genMPI(108), evoPa: genEvoPa(156250), coutTheorique: genCout(156250), opportunite: genOpp(156250), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Lait" },
    { id: "sf110", nom: "Laits frais pasteurises", tags: [], ca: genCA(156250, 109), mpa: genMPA(109), mpi: genMPI(109), evoPa: genEvoPa(156250), coutTheorique: genCout(156250), opportunite: genOpp(156250), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "LAIT BEURRE CREME", groupeFamille: "Cremerie", famille: "Lait" },

    // ŒUF PPI > Pain/viennoiserie/patisserie > Pains industriels (7 SF)
    { id: "sf111", nom: "Aut.produit panific.industriel", tags: [], ca: genCA(44643, 110), mpa: genMPA(110), mpi: genMPI(110), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf112", nom: "Autres pains industriels", tags: [], ca: genCA(44643, 111), mpa: genMPA(111), mpi: genMPI(111), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf113", nom: "Pain de mie standard", tags: [], ca: genCA(44643, 112), mpa: genMPA(112), mpi: genMPI(112), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf114", nom: "Pains de mie élaboré", tags: [], ca: genCA(44643, 113), mpa: genMPA(113), mpi: genMPI(113), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf115", nom: "Pains hamburgers/hot-dogs", tags: [], ca: genCA(44643, 114), mpa: genMPA(114), mpi: genMPI(114), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf116", nom: "Pains précuits", tags: [], ca: genCA(44643, 115), mpa: genMPA(115), mpi: genMPI(115), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },
    { id: "sf117", nom: "Spécialités étrangères", tags: [], ca: genCA(44643, 116), mpa: genMPA(116), mpi: genMPI(116), evoPa: genEvoPa(44643), coutTheorique: genCout(44643), opportunite: genOpp(44643), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Pains industriels" },

    // ŒUF PPI > Pain/viennoiserie/patisserie > Viennoiseries (3 SF)
    { id: "sf118", nom: "Feuilletés/croissants/pains chocolat", tags: [], ca: genCA(62500, 117), mpa: genMPA(117), mpi: genMPI(117), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Viennoiseries" },
    { id: "sf119", nom: "Goûter enfant", tags: [], ca: genCA(62500, 118), mpa: genMPA(118), mpi: genMPI(118), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Viennoiseries" },
    { id: "sf120", nom: "Panettone/brioche/prd tranche", tags: [], ca: genCA(62500, 119), mpa: genMPA(119), mpi: genMPI(119), evoPa: genEvoPa(62500), coutTheorique: genCout(62500), opportunite: genOpp(62500), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Viennoiseries" },

    // ŒUF PPI > Cremerie > Œufs (1 SF)
    { id: "sf121", nom: "Oeufs", tags: [], ca: genCA(375000, 120), mpa: genMPA(120), mpi: genMPI(120), evoPa: genEvoPa(375000), coutTheorique: genCout(375000), opportunite: genOpp(375000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ŒUF PPI", groupeFamille: "Cremerie", famille: "Œufs" },

    // TRAITEUR > Traiteur > Traiteur/plats cuisinés frais (6 SF)
    { id: "sf122", nom: "Entrées", tags: [], ca: genCA(125000, 121), mpa: genMPA(121), mpi: genMPI(121), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf123", nom: "Entrées exotiques", tags: [], ca: genCA(125000, 122), mpa: genMPA(122), mpi: genMPI(122), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf124", nom: "Pates à tarte fraiches", tags: [], ca: genCA(125000, 123), mpa: genMPA(123), mpi: genMPI(123), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf125", nom: "Pizzas", tags: [], ca: genCA(125000, 124), mpa: genMPA(124), mpi: genMPI(124), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf126", nom: "Sandwichs", tags: [], ca: genCA(125000, 125), mpa: genMPA(125), mpi: genMPI(125), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },
    { id: "sf127", nom: "Traiteur sucré", tags: [], ca: genCA(125000, 126), mpa: genMPA(126), mpi: genMPI(126), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Traiteur/plats cuisinés frais" },

    // TRAITEUR > Traiteur > Pâtes fraiches/Quenelles (4 SF)
    { id: "sf128", nom: "Gnocchis", tags: [], ca: genCA(125000, 127), mpa: genMPA(127), mpi: genMPI(127), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Pâtes fraiches/Quenelles" },
    { id: "sf129", nom: "Pates fourrees", tags: [], ca: genCA(125000, 128), mpa: genMPA(128), mpi: genMPI(128), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Pâtes fraiches/Quenelles" },
    { id: "sf130", nom: "Pates natures", tags: [], ca: genCA(125000, 129), mpa: genMPA(129), mpi: genMPI(129), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Pâtes fraiches/Quenelles" },
    { id: "sf131", nom: "Quenelles", tags: [], ca: genCA(125000, 130), mpa: genMPA(130), mpi: genMPI(130), evoPa: genEvoPa(125000), coutTheorique: genCout(125000), opportunite: genOpp(125000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "TRAITEUR  ", groupeFamille: "Traiteur", famille: "Pâtes fraiches/Quenelles" },

    // ULTRA FRAIS > Ultra frais > Jus de fruits frais/légumes (2 SF)
    { id: "sf132", nom: "Autres boissons fraiches", tags: [], ca: genCA(23438, 131), mpa: genMPA(131), mpi: genMPI(131), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Jus de fruits frais/légumes" },
    { id: "sf133", nom: "Pur jus", tags: [], ca: genCA(23438, 132), mpa: genMPA(132), mpi: genMPI(132), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Jus de fruits frais/légumes" },

    // ULTRA FRAIS > Ultra frais > Desserts (8 SF)
    { id: "sf134", nom: "Autres desserts", tags: [], ca: genCA(5859, 133), mpa: genMPA(133), mpi: genMPI(133), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf135", nom: "Crèmes aux œufs/petits pot crème", tags: [], ca: genCA(5859, 134), mpa: genMPA(134), mpi: genMPI(134), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf136", nom: "Crèmes dessert", tags: [], ca: genCA(5859, 135), mpa: genMPA(135), mpi: genMPI(135), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf137", nom: "Dessert patissier", tags: [], ca: genCA(5859, 136), mpa: genMPA(136), mpi: genMPI(136), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf138", nom: "Flans/gélifiés", tags: [], ca: genCA(5859, 137), mpa: genMPA(137), mpi: genMPI(137), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf139", nom: "Liégeois", tags: [], ca: genCA(5859, 138), mpa: genMPA(138), mpi: genMPI(138), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf140", nom: "Mousses", tags: [], ca: genCA(5859, 139), mpa: genMPA(139), mpi: genMPI(139), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },
    { id: "sf141", nom: "Riz/semoule", tags: [], ca: genCA(5859, 140), mpa: genMPA(140), mpi: genMPI(140), evoPa: genEvoPa(5859), coutTheorique: genCout(5859), opportunite: genOpp(5859), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Desserts" },

    // ULTRA FRAIS > Ultra frais > Fromage frais (4 SF)
    { id: "sf142", nom: "Autres fromages frais", tags: [], ca: genCA(11719, 141), mpa: genMPA(141), mpi: genMPI(141), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Fromage frais" },
    { id: "sf143", nom: "Fromage frais aromatisé/fruit", tags: [], ca: genCA(11719, 142), mpa: genMPA(142), mpi: genMPI(142), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Fromage frais" },
    { id: "sf144", nom: "Fromage frais sant/bio", tags: [], ca: genCA(11719, 143), mpa: genMPA(143), mpi: genMPI(143), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Fromage frais" },
    { id: "sf145", nom: "Fromages frais natures", tags: [], ca: genCA(11719, 144), mpa: genMPA(144), mpi: genMPI(144), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Fromage frais" },

    // ULTRA FRAIS > Ultra frais > Yaourts aromatisés/fruits (5 SF)
    { id: "sf146", nom: "Autres yaourts", tags: [], ca: genCA(9375, 145), mpa: genMPA(145), mpi: genMPI(145), evoPa: genEvoPa(9375), coutTheorique: genCout(9375), opportunite: genOpp(9375), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts aromatisés/fruits" },
    { id: "sf147", nom: "Yaourts aromatises", tags: [], ca: genCA(9375, 146), mpa: genMPA(146), mpi: genMPI(146), evoPa: genEvoPa(9375), coutTheorique: genCout(9375), opportunite: genOpp(9375), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts aromatisés/fruits" },
    { id: "sf148", nom: "Yaourts aux céréales", tags: [], ca: genCA(9375, 147), mpa: genMPA(147), mpi: genMPI(147), evoPa: genEvoPa(9375), coutTheorique: genCout(9375), opportunite: genOpp(9375), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts aromatisés/fruits" },
    { id: "sf149", nom: "Yaourts aux fruits", tags: [], ca: genCA(9375, 148), mpa: genMPA(148), mpi: genMPI(148), evoPa: genEvoPa(9375), coutTheorique: genCout(9375), opportunite: genOpp(9375), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts aromatisés/fruits" },
    { id: "sf150", nom: "Yaourts aux fruits alleges", tags: [], ca: genCA(9375, 149), mpa: genMPA(149), mpi: genMPI(149), evoPa: genEvoPa(9375), coutTheorique: genCout(9375), opportunite: genOpp(9375), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts aromatisés/fruits" },

    // ULTRA FRAIS > Ultra frais > Compotes fraiches/desserts (2 SF)
    { id: "sf151", nom: "Compotes de pommes", tags: [], ca: genCA(23438, 150), mpa: genMPA(150), mpi: genMPI(150), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Compotes fraiches/desserts" },
    { id: "sf152", nom: "Compotes pommes + fruits", tags: [], ca: genCA(23438, 151), mpa: genMPA(151), mpi: genMPI(151), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Compotes fraiches/desserts" },

    // ULTRA FRAIS > Ultra frais > Yaourts santé/biologique (4 SF)
    { id: "sf153", nom: "Yaourt sante biolog.aromatisé", tags: [], ca: genCA(11719, 152), mpa: genMPA(152), mpi: genMPI(152), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts santé/biologique" },
    { id: "sf154", nom: "Yaourt sante biolog.base soja", tags: [], ca: genCA(11719, 153), mpa: genMPA(153), mpi: genMPI(153), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts santé/biologique" },
    { id: "sf155", nom: "Yaourt sante biologique fruits", tags: [], ca: genCA(11719, 154), mpa: genMPA(154), mpi: genMPI(154), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts santé/biologique" },
    { id: "sf156", nom: "Yaourt sante biologique nature", tags: [], ca: genCA(11719, 155), mpa: genMPA(155), mpi: genMPI(155), evoPa: genEvoPa(11719), coutTheorique: genCout(11719), opportunite: genOpp(11719), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts santé/biologique" },

    // ULTRA FRAIS > Ultra frais > Yaourts à boire/Snacking (1 SF)
    { id: "sf157", nom: "Yaourts a boire", tags: [], ca: genCA(46875, 156), mpa: genMPA(156), mpi: genMPI(156), evoPa: genEvoPa(46875), coutTheorique: genCout(46875), opportunite: genOpp(46875), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts à boire/Snacking" },

    // ULTRA FRAIS > Ultra frais > Yaourts natures (2 SF)
    { id: "sf158", nom: "Yaourts nature alleges", tags: [], ca: genCA(23438, 157), mpa: genMPA(157), mpi: genMPI(157), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts natures" },
    { id: "sf159", nom: "Yaourts natures", tags: [], ca: genCA(23438, 158), mpa: genMPA(158), mpi: genMPI(158), evoPa: genEvoPa(23438), coutTheorique: genCout(23438), opportunite: genOpp(23438), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Ultra frais", famille: "Yaourts natures" },

    // ULTRA FRAIS > Pain/viennoiserie/patisserie > Patisseries industrielles (5 SF)
    { id: "sf160", nom: "Autres patisseries/gateaux", tags: [], ca: genCA(50000, 159), mpa: genMPA(159), mpi: genMPI(159), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Patisseries industrielles" },
    { id: "sf161", nom: "Madeleines", tags: [], ca: genCA(50000, 160), mpa: genMPA(160), mpi: genMPI(160), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Patisseries industrielles" },
    { id: "sf162", nom: "Patisseries individuelles", tags: [], ca: genCA(50000, 161), mpa: genMPA(161), mpi: genMPI(161), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Patisseries industrielles" },
    { id: "sf163", nom: "Patisseries/gateaux a tranche", tags: [], ca: genCA(50000, 162), mpa: genMPA(162), mpi: genMPI(162), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Patisseries industrielles" },
    { id: "sf164", nom: "Spec.sucree dont crepe gauffre", tags: [], ca: genCA(50000, 163), mpa: genMPA(163), mpi: genMPI(163), evoPa: genEvoPa(50000), coutTheorique: genCout(50000), opportunite: genOpp(50000), marche: "PLS", marcheDetaille: "Laitier Traiteur", categorie: "ULTRA FRAIS", groupeFamille: "Pain/viennoiserie/patisserie", famille: "Patisseries industrielles" },
  ],

  Produit: [],

  Fournisseur: [
    { id: "four1", nom: "Labeyrie Fine Foods", tags: ["45 PRO"], ca: genCA(1850000, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(1850000), coutTheorique: genCout(1850000), opportunite: genOpp(1850000) },
    { id: "four2", nom: "Picard Surgelés", tags: ["68 PRO"], ca: genCA(2450000, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(2450000), coutTheorique: genCout(2450000), opportunite: genOpp(2450000) },
    { id: "four3", nom: "Lactalis Foodservice", tags: ["52 PRO"], ca: genCA(2100000, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(2100000), coutTheorique: genCout(2100000), opportunite: genOpp(2100000) },
    { id: "four4", nom: "Fleury Michon", tags: ["38 PRO"], ca: genCA(1650000, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(1650000), coutTheorique: genCout(1650000), opportunite: genOpp(1650000) },
    { id: "four5", nom: "Danone Professionnel", tags: ["44 PRO"], ca: genCA(1280000, 4), mpa: genMPA(4), mpi: genMPI(4), evoPa: genEvoPa(1280000), coutTheorique: genCout(1280000), opportunite: genOpp(1280000) },
    { id: "four6", nom: "Nestlé Professional", tags: ["36 PRO"], ca: genCA(980000, 5), mpa: genMPA(5), mpi: genMPI(5), evoPa: genEvoPa(980000), coutTheorique: genCout(980000), opportunite: genOpp(980000) },
    { id: "four7", nom: "Sysco France", tags: ["78 PRO"], ca: genCA(3200000, 6), mpa: genMPA(6), mpi: genMPI(6), evoPa: genEvoPa(3200000), coutTheorique: genCout(3200000), opportunite: genOpp(3200000) },
    { id: "four8", nom: "Transgourmet", tags: ["62 PRO"], ca: genCA(2750000, 7), mpa: genMPA(7), mpi: genMPI(7), evoPa: genEvoPa(2750000), coutTheorique: genCout(2750000), opportunite: genOpp(2750000) },
    { id: "four9", nom: "Metro Cash & Carry", tags: ["55 PRO"], ca: genCA(2350000, 8), mpa: genMPA(8), mpi: genMPI(8), evoPa: genEvoPa(2350000), coutTheorique: genCout(2350000), opportunite: genOpp(2350000) },
    { id: "four10", nom: "Brake France", tags: ["48 PRO"], ca: genCA(1890000, 9), mpa: genMPA(9), mpi: genMPI(9), evoPa: genEvoPa(1890000), coutTheorique: genCout(1890000), opportunite: genOpp(1890000) },
  ],

  Portefeuille: [
    { id: "port1", nom: "Premium Gourmet", tags: ["125 PRO"], ca: genCA(4500000, 0), mpa: genMPA(0), mpi: genMPI(0), evoPa: genEvoPa(4500000), coutTheorique: genCout(4500000), opportunite: genOpp(4500000) },
    { id: "port2", nom: "Tradition & Qualité", tags: ["185 PRO"], ca: genCA(5250000, 1), mpa: genMPA(1), mpi: genMPI(1), evoPa: genEvoPa(5250000), coutTheorique: genCout(5250000), opportunite: genOpp(5250000) },
    { id: "port3", nom: "Economique", tags: ["142 PRO"], ca: genCA(1950000, 2), mpa: genMPA(2), mpi: genMPI(2), evoPa: genEvoPa(1950000), coutTheorique: genCout(1950000), opportunite: genOpp(1950000) },
    { id: "port4", nom: "Bio & Responsable", tags: ["40 PRO"], ca: genCA(800000, 3), mpa: genMPA(3), mpi: genMPI(3), evoPa: genEvoPa(800000), coutTheorique: genCout(800000), opportunite: genOpp(800000) },
  ],
};

// Générer les produits dynamiquement basés sur les sous-familles
// Au moins 4 produits par sous-famille
const generateProducts = (): PerimetreItem[] => {
  const products: PerimetreItem[] = [];
  let productCounter = 1;

  perimetreData["Sous Famille"].forEach((sf) => {
    // Générer au moins 4 produits pour chaque sous-famille
    const numProducts = 4;

    for (let i = 0; i < numProducts; i++) {
      products.push({
        id: `prod${productCounter}`,
        nom: getProductName(sf.nom, i),
        tags: [],
        ca: genCA(2500, productCounter),
        mpa: genMPA(productCounter),
        mpi: genMPI(productCounter),
        evoPa: genEvoPa(2500),
        coutTheorique: genCout(2500),
        opportunite: genOpp(2500),
        marche: sf.marche || "PLS",
        marcheDetaille: sf.marcheDetaille,
        categorie: sf.categorie,
        groupeFamille: sf.groupeFamille,
        famille: sf.famille,
        sousFamille: sf.nom,
        pays: getRandomItem(pays, productCounter),
        fournisseur: getRandomItem(fournisseurs, productCounter),
        portefeuille: getRandomItem(portefeuilles, productCounter),
      });
      productCounter++;
    }
  });

  return products;
};

// Remplir le tableau des produits
perimetreData.Produit = generateProducts();

// Enrichir tous les périmètres avec pays, fournisseur, portefeuille
const enrichirDonneesAvecAttributs = () => {
  let counter = 0;

  // Pour chaque type de périmètre (sauf Fournisseur et Portefeuille qui sont déjà gérés)
  const perimetresToEnrich: PerimetreType[] = [
    "Marché",
    "Marché détaillé",
    "Catégorie",
    "Groupe Famille",
    "Famille",
    "Sous Famille",
  ];

  perimetresToEnrich.forEach((perimType) => {
    perimetreData[perimType] = perimetreData[perimType].map((item) => {
      counter++;
      return {
        ...item,
        pays: getRandomItem(pays, counter),
        fournisseur: getRandomItem(fournisseurs, counter),
        portefeuille: getRandomItem(portefeuilles, counter),
      };
    });
  });
};

enrichirDonneesAvecAttributs();

// Configuration des filtres disponibles par périmètre
export const perimetreFilters: Record<
  PerimetreType,
  ("pays" | "fournisseur" | "portefeuille" | "marche" | "marcheDetaille" | "categorie" | "groupeFamille" | "famille" | "sousFamille")[]
> = {
  Marché: ["pays", "fournisseur", "portefeuille"],
  "Marché détaillé": ["pays", "fournisseur", "portefeuille", "marche"],
  Catégorie: ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille"],
  "Groupe Famille": ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie"],
  Famille: ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie", "groupeFamille"],
  "Sous Famille": ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie", "groupeFamille", "famille"],
  Produit: ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie", "groupeFamille", "famille", "sousFamille"],
  Fournisseur: ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie", "groupeFamille", "famille", "sousFamille"],
  Portefeuille: ["pays", "fournisseur", "portefeuille", "marche", "marcheDetaille", "categorie", "groupeFamille", "famille", "sousFamille"],
};

// Colonnes du tableau par périmètre
export interface TableColumn {
  key: string;
  label: string;
  hasEvolution?: boolean;
}

export const perimetreColumns: Record<PerimetreType, TableColumn[]> = {
  Marché: [
    { key: "nom", label: "Marché" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  "Marché détaillé": [
    { key: "nom", label: "Marché détaillé" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  Catégorie: [
    { key: "nom", label: "Catégorie" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  "Groupe Famille": [
    { key: "nom", label: "Groupe Famille" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  Famille: [
    { key: "nom", label: "Famille" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  "Sous Famille": [
    { key: "nom", label: "Sous Famille" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  Produit: [
    { key: "nom", label: "Produit" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  Fournisseur: [
    { key: "nom", label: "Fournisseur" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
  Portefeuille: [
    { key: "nom", label: "Portefeuille" },
    { key: "tags", label: "Tags" },
    { key: "ca", label: "CA", hasEvolution: true },
    { key: "mpa", label: "MPA", hasEvolution: true },
    { key: "mpi", label: "MPI", hasEvolution: true },
    { key: "evoPa", label: "Evo PA", hasEvolution: true },
    { key: "coutTheorique", label: "Coût théorique", hasEvolution: true },
    { key: "opportunite", label: "Opportunité", hasEvolution: true },
  ],
};
